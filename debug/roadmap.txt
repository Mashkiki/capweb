[GAME CANVAS]
1. Create a canvas with a background that represents current area

2. Have arrows on each side of it pointing to next/previous area
    a) Default CAP restrictions for entering area (pet score, shiny score, metallic score)
        - If a player has enough of the required score, show an unlocked lock
        - If he doesn't, show a locked one
    b) Optimizations...

3. Add area specific icons to the canvas:
    a) Wall upgrades
    b) Egg hyperlinks to the respected page
    c) Things like submarine, crank and shroom.

4. Generate a couple (4-8) crystals with of varying sizes onto it
    a) Every crystal will be it's own object with methods like construct, deconstruct and generate drops
        - Drops will be unbalanced early on
        - Magic numbers >.<
    b) Pets will randomly target a crystal
        - Pets won't be models, rather a worded representation showing that the pet is currently on that crystal
            # - Aqua Dino
            # - Shiny Karate Cactus
            # - Super Duck
            # - Waspinator
            # - Chrome Lycanmir
            # - Obsidian Peacock
        - They will normally do damage, but with magic number tweaks if needed

-------------------------------------------------
u góry jest co pisałem sobie wcześniej ^^^
rzeczy z gwiazdką są dodatkowe:
-------------------------------------------------

gracz ma pety, które niszczą kryształy na mapie.
jakoś trzeba zrobić że kryształy są zarówno obiektem w js i są renderowane na canvasie.
*dla każdego zone'a są 3 wielkości kryształów z różnymi wartościami hp; są tak samo rzadkie.
pety losowo targetują kryształy, na jednym krysztale może być kilka petów.
można by to zrobić tak, że każdy pet ma przypisany kryształ, a każdy kryształ ma przypisany zbiór petów.
poszczególne pety mają zegar atakowania, i co jakiś czas (podstawowo ~2-3 sekundy) zadaje kryształowi tyle dmg co ma pet (staty petów wytłumacze kiedy indziej).
po ataku się otrzymuje tyle samo golda co się zadało dmg * mnożnik golda (na razie nie potrzebne).
*wyrenderowane kryształy nie mogą na siebie nachodzić (wydaje mi się że najtrudniejsze, bo będzie trzeba wykorzystać jakiś algorytm który znajduje wolne miejsce).
*chciałbym żeby na każdym ataku była pokazywana animacja wstrząśnięcia kryształu (ale w pierwszych wersjach nie musi tego być).
*kryształy losowo dropią dodatkowe dropy o różnych rozmiarach, chyba każdy ma przypisane ile daje golda ale musiałbym poeksperymentować.
**kryształy (wyrenderowane) mają na sobie liczbę aktualnie przypisanych petów, po najechaniu na kryształ wyświetla się lista tych petów.

pety są z jajek (klasyczek), które się kupuje za golda (wiadomka)
jajka są [common, uncommon, rare, epic, legendary...]
każdy pet z danej "rzadkości" jest tak samo rzadki i ma takie same staty
*początkowo jest szansa 1/1000 że można dostać shiny skina do peta bla bla to na później
tera technicznie:
początkowo masz obiekt gracza, który przechowuje wszystkie dane, które będą zapisywane
coś w stylu:
let player = {
    inventory: {
        pets: {
            {pet_id: 52, amount: 22}
            {pet_id: 202, amount: 3}
        }
        shinies: {
            {pet_id: 69, amount: 1}
        }
        chrome
        [...]
    }
    gold: 85276246,
    mythic_stones: 1022,
    shiny_score: calculateShinyScore(),
    [...]
}
najważniejsze jest jakie pety gracz ma equippnięte, nie mam pojęcia (na razie) w jaki sposób to przechować i jak wszystko sprawdzać, raczej największe wyzwanie na start

projekt GUI ci pokaże kiedyś na dc


[Rendering]
1. Create crystal object
    a) Set area and other properties
    b) *Set width and height depending on the crystal's size

2. Append the crystal to a respective area

3. Create a rendering pipeline
    a) gameWindow already takes care of the animation cycle, so no need to figure that out
    b) Create a loop. Loop through the area's crystals object/array to find every crystal that should be on the map
    c) For every crystal that is in that object/array, draw a rectangle in a *safe spot on the canvas
    d)
    x) Check for changes in the area's crystals object

------------------
czyli jak juz zrobisz smiecia (kryształa)
to wypierdalasz jego zajete komórki z mozliwosci renderowania
wiec
nie bedzie sie mogl renderowac w tym samym miejsku


jak się zmienia area to się robi czarny ekran
podczas szczytu animacji zachodzi zmiana area
jak sie zmieni (czyli delay 500ms) to znika czarny ekran
--------------------
WAZNE
w game.js przy equipBestPets() zmienić sortowanie, by uwzględniało mnożnik dmg
